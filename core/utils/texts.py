import re

import funcy
from funcy import str_join

error_head = f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñüö®–û–®–ò–ë–ö–êüö®‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"


async def error_server(status):
    return error_head + f'–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {status}'


def error_full_name(name):
    return "{error_head}–§–ò–û —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 3 —Å–ª–æ–≤, –∞ –≤–∞—à–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ {count} —Å–ª–æ–≤\n<b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.</b>".format(error_head=error_head, count=len(name.split()))

menu = f'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
need_reg = '–í—ã –∑–∞—à–ª–∏ –≤–ø–µ—Ä–≤—ã–µ, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b><u>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</u></b>'

succes_registration = '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –ø—Ä–æ–π–¥–µ–Ω–∞'


def phoneNotReg(phone):
    text = error_head + \
           (f'–í–∞—à —Å–æ—Ç–æ–≤—ã–π "{phone}" –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ –∏–ª–∏ –≤–∞—Å –Ω–µ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ <u><b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b></u>\n'
            f'–£—Ç–æ—á–Ω–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
    return text


def phone(phone):
    phone = str_join(sep="", seq=re.findall(r'[0-9]*', phone))
    if re.findall(r'^89', phone):
        return re.sub(r'^89', '79', phone)
    return phone


async def employee_true(employeeInfo, phone):
    shops = [i['–ú–∞–≥–∞–∑–∏–Ω'] for i in employeeInfo["–ú–∞–≥–∞–∑–∏–Ω—ã"]]
    text = (f'‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ:</b>\n'
            f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
            f'<b>–ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</b>: <code>{employeeInfo["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ"]}</code>\n'
            f'<b>–°–æ—Ç–æ–≤—ã–π</b>: <code>+{phone}</code>\n'
            f'<b>–ú–∞–≥–∞–∑–∏–Ω—ã</b>: <code>{funcy.str_join(sep=",", seq=shops)}</code>\n')
    return text
